{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","EDIT","icon","faCode","PREVIEW","faFileCode","App","props","state","markdown","handleChange","bind","event","this","setState","target","value","Container","fluid","id","className","Row","xs","md","Col","Card","Header","Body","onChange","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAWAA,SAAOC,WAAW,CACdC,QAAQ,IAGZ,IAAMC,EAAO,cAAC,IAAD,CAAiBC,KAAMC,MAC9BC,EAAU,cAAC,IAAD,CAAiBF,KAAMG,MAiFxBC,E,kDAhDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTC,SAnCK,srBAsCT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPN,E,gDAUlB,SAAaC,GACTC,KAAKC,SAAS,CAACL,SAAUG,EAAMG,OAAOC,U,oBAG1C,WACI,OACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,GAAG,gBAApB,UACI,wBAAQC,UAAU,qCAAlB,SACI,oBAAIA,UAAU,cAAd,4CAGJ,cAACH,EAAA,EAAD,CAAWC,OAAK,EAACE,UAAU,OAA3B,SACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGH,UAAU,MAAMD,GAAG,SAAtC,UACI,cAACK,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMN,GAAG,cAAT,UACI,eAACM,EAAA,EAAKC,OAAN,eAAc,mCAAMzB,EAAN,aAAd,OACA,cAACwB,EAAA,EAAKE,KAAN,UACI,0BAAUP,UAAU,MAAMD,GAAG,SAASH,MAAOH,KAAKL,MAAMC,SAAUmB,SAAUf,KAAKH,sBAI7F,cAACc,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMN,GAAG,eAAT,UACI,eAACM,EAAA,EAAKC,OAAN,eAAc,mCAAMtB,EAAN,cAAd,OACA,cAACqB,EAAA,EAAKE,KAAN,CAAWP,UAAU,iBAAiBD,GAAG,UAAWU,wBAAyB,CACjEC,OAAQhC,iBAAOe,KAAKL,MAAMC,8B,GArCpDsB,IAAMC,WCnCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d0ae7c27.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card'\nimport { marked } from 'marked';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode, faFileCode } from '@fortawesome/free-solid-svg-icons';\n\nmarked.setOptions({\n    breaks: true\n});\n\nconst EDIT = <FontAwesomeIcon icon={faCode} />\nconst PREVIEW = <FontAwesomeIcon icon={faFileCode} />\n\nconst PLACEHOLDER = `**This is an example of a bold text**\n\n# Default previewer text\n\n## React Markdown Live Preview (Sub-heading)\n\nIf you are not familiar with markdown, here is a [Markdown Cheat Sheet](https://www.markdownguide.org/cheat-sheet/).\n\nExample of inline code: \\` <p> Hello World <br /> </p> \\`\n\n\\`\\`\\` \n// Example of Code block: \nconst profile = {\n    name: 'Aminat', \n    stack: 'Full Stack Dev'\n    }  \n\\`\\`\\`\n\n// List item\n1. code \n2. Run \n3. Debug\n\n> When life gives you lemons, make grape juice, then sit back and let people wonder how you did it.  - Priyanka Chopra\n\n![A3 Logo](https://raw.githubusercontent.com/A3AJAGBE/react-markdown-previewer/main/public/logo192.png)\n\n`;\n\nclass App extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            markdown: PLACEHOLDER,\n        };\n        \n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({markdown: event.target.value});\n    }\n\n    render() {\n        return (\n            <Container fluid id=\"App-Container\">\n                <header className=\"d-flex justify-content-center py-3\">\n                    <h1 className=\"text-center\">A3AJAGBE Markdown Previewer </h1>\n                </header>\n        \n                <Container fluid className=\"pb-4\">\n                    <Row xs={1} md={2} className=\"g-4\" id=\"MP-Row\">\n                        <Col>\n                            <Card id=\"Editor-Card\">\n                                <Card.Header> <h2> {EDIT} Editor</h2> </Card.Header>\n                                <Card.Body>\n                                    <textarea className=\"p-4\" id=\"editor\" value={this.state.markdown} onChange={this.handleChange}></textarea>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card id=\"Preview-Card\">\n                                <Card.Header> <h2> {PREVIEW} Preview</h2> </Card.Header>\n                                <Card.Body className=\"Preview-scroll\" id=\"preview\"  dangerouslySetInnerHTML={{\n                                            __html: marked(this.state.markdown),}}>\n                                \n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n        \n            </Container>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}